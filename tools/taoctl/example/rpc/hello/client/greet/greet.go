// Code generated by taoctl. DO NOT EDIT!
// Source: hello.proto

package client

import (
	"context"

	"github.com/sllt/tao/tools/taoctl/example/rpc/hello/pb/hello"

	"github.com/sllt/tao/zrpc"
	"google.golang.org/grpc"
)

type (
	HelloReq  = hello.HelloReq
	HelloResp = hello.HelloResp

	Greet interface {
		SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloResp, error)
	}

	defaultGreet struct {
		cli zrpc.Client
	}
)

func NewGreet(cli zrpc.Client) Greet {
	return &defaultGreet{
		cli: cli,
	}
}

func (m *defaultGreet) SayHello(ctx context.Context, in *HelloReq, opts ...grpc.CallOption) (*HelloResp, error) {
	client := hello.NewGreetClient(m.cli.Conn())
	return client.SayHello(ctx, in, opts...)
}
